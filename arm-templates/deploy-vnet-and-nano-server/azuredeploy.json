{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clientID": {
      "type": "string",
      "minLength": 2,
      "maxLength": 5,
      "defaultValue": "rei",
      "metadata": {
        "description": "Prefix for the Environment (2-5 characters) related to the Client ID or Name."
      }
    },
    "primaryAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Primary Address prefix."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Nano Server Subnet Prefix."
      }
    },
    "nanoServerServerNicIPAddress": {
      "type": "string",
      "defaultValue": "10.0.1.4",
      "metadata": {
        "description": "The Primary IP address of the new Nano Server being deployed."
      }
    },
    "nanoServerStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "Description": "The Type of Redundant Storage used for the Nano Server being deployed."
      }
    },
    "nanoServeradminUsername": {
      "type": "string",
      "defaultValue": "winadmin",
      "metadata": {
        "Description": "The Local Username of the account being created on the Nano Server."
      }
    },
    "nanoServeradminPassword": {
      "type": "securestring",
      "defaultValue": "AlwaysOn!",
      "metadata": {
        "Description": "The Local Password of the account being created on the Nano Server."
      }
    },
    "nanoServerServerImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer"
      ],
      "metadata": {
        "description": "The Microsoft Image Publisher of the Image being used for the Nano Server."
      }
    },
    "nanoServerServerImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer"
      ],
      "metadata": {
        "description": "The Microsoft Image Offer of the Image being used for the Nano Server."
      }
    },
    "nanoServerServerImageSku": {
      "type": "string",
      "defaultValue": "2016-Nano-Server",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview",
        "2016-Nano-Server"
      ],
      "metadata": {
        "description": "The Microsoft Image SKU of the Image being used for the Nano Server."
      }
    },
    "nanoServerServerImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "latest"
      ],
      "metadata": {
        "description": "The Version Number of the fully patched Windows Image being deployed."
      }
    },
    "nanoServerServerDataDiskSize": {
      "type": "int",
      "defaultValue": 50,
      "metadata": {
        "description": "The Size of the Nano Server Data Disk in GB."
      }
    },
    "nanoServerServerVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4"
      ],
      "metadata": {
        "description": "The Size of the Nano Server VM being deployed in Azure."
      }
    },
    "nanoServerKeyVaultId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Azure Key Vault Resource Id which is found in the Properties Blade of the Key Vault."
      }
    },
    "nanoServerCertificateUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Secret Identifier URL of the Nano Server Certificate stored in the Azure Key Vault."
      }
    },
    "appDeploymentTag": {
      "type": "string",
      "defaultValue": "CoreWebAppDemo",
      "metadata": {
        "description": "The Name of the Application being deployed to the Nano Server."
      }
    },	
    "apiVersion": {
      "type": "string",
      "defaultValue": "2015-06-15",
      "metadata": {
        "description": "The Azure Resource Manager API Version to use during the Deployment."
      }
    }
  },
  "variables": {
    "vNetName": "[concat(parameters('clientID'), '-VNet')]",
    "subnetName": "[concat(parameters('clientID'), '-Subnet')]",
    "nsgName": "[concat(parameters('clientID'), '-nsg-', substring(uniqueString(resourceGroup().id), 0, 2))]",
    "nanoServerPubIPName": "[concat(parameters('clientID'), '-nanosrv-', substring(uniqueString(resourceGroup().id), 0, 2))]",
    "nanoServerStorageName": "[concat(parameters('clientID'), 'nanosrvstr', substring(uniqueString(resourceGroup().id), 0, 4))]",
    "nanoServerName": "[concat(parameters('clientID'), '-nanosrv-', substring(uniqueString(resourceGroup().id), 0, 2))]",
    "nanoServerOSDiskName": "[concat(variables('nanoServerName'), '-OSDisk')]",
    "nanoServerDataDiskName": "[concat(variables('nanoServerName'), '-DataDisk')]"
  },
  "resources": [
    {
      "name": "[variables('nanoServerStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[parameters('apiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('nanoServerStorageName')]"
      },
      "properties": {
        "accountType": "[parameters('nanoServerStorageType')]"
      }
    },
    {
      "name": "[variables('nanoServerPubIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "[parameters('apiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('nanoServerPubIPName')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('nanoServerPubIPName')]"
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-http-inbound",
            "properties": {
              "description": "Allow HTTP through port 80.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(parameters('subnetPrefix'))]",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-winrm-http-inbound",
            "properties": {
              "description": "Allow WinRM HTTP Traffic through port 5985.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5985",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(parameters('subnetPrefix'))]",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-winrm-https-inbound",
            "properties": {
              "description": "Allow WinRM HTTPS Traffic through port 5986.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(parameters('subnetPrefix'))]",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-dotnet-core-app-http-inbound",
            "properties": {
              "description": "Allow .NET Core App HTTP Traffic through port 8000.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(parameters('subnetPrefix'))]",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('primaryAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nanoServerName'), '-NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "[parameters('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('nanoServerPubIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
      ],
      "tags": {
        "displayName": "[concat(variables('nanoServerName'), '-NIC')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('nanoServerName'), '-ipconfig')]",
            "properties": {
              "privateIPAddress": "[parameters('nanoServerServerNicIPAddress')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nanoServerPubIPName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '/subnets/', variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('nanoServerName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "[parameters('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('nanoServerStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nanoServerName'), '-NIC')]"
      ],
      "tags": {
        "displayName": "[variables('nanoServerName')]",
		"appDeployment": "[parameters('appDeploymentTag')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('nanoServerServerVMSize')]"
        },
        "osProfile": {
          "secrets": [
            {
              "sourceVault": { "id": "[parameters('nanoServerKeyVaultId')]" },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('nanoServerCertificateUrl')]",
                  "certificateStore": "My"
                }
              ]
            }
          ],
          "computerName": "[variables('nanoServerName')]",
          "adminUsername": "[parameters('nanoServeradminUsername')]",
          "adminPassword": "[parameters('nanoServeradminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": false,
            "winRM": {
              "listeners": [
                {
                  "protocol": "Https",
                  "certificateUrl": "[parameters('nanoServerCertificateUrl')]"
                }
              ]
            }
          }

        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('nanoServerServerImagePublisher')]",
            "offer": "[parameters('nanoServerServerImageOffer')]",
            "sku": "[parameters('nanoServerServerImageSku')]",
            "version": "[parameters('nanoServerServerImageVersion')]"
          },
          "osDisk": {
            "name": "[variables('nanoServerOSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('nanoServerStorageName'), '.blob.core.windows.net/vhds', '/', variables('nanoServerOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://', variables('nanoServerStorageName'), '.blob.core.windows.net/vhds', '/', variables('nanoServerDataDiskName'),'-F.vhd')]"
              },
              "name": "[concat(variables('nanoServerName'),'-F')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[parameters('nanoServerServerDataDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nanoServerName'), '-NIC'))]",
              "properties": { "primary": true }
            }
          ]
        }
      },
      "resources": [
      ]
    }
  ]
}